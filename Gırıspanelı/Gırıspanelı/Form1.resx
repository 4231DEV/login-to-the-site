<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>